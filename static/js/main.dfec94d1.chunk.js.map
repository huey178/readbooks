{"version":3,"sources":["components/navbar.component.js","components/book-list.component.js","components/edit-book.component.js","components/create-user.component.js","components/create-book.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Book","props","book","username","title","author","pages","date","substring","_id","onClick","deleteBook","BookList","axios","delete","then","res","console","log","data","setState","books","state","filter","el","bookList","map","currentbook","key","get","response","catch","error","this","editBook","onChangeUsername","e","target","value","onChangeTitle","onChangeAuthor","onChangePages","onChangeDate","onSubmit","preventDefault","post","match","params","window","location","Date","users","err","length","user","ref","required","onChange","selected","createUser","createBook","App","path","exact","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dfec94d1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\n\nexport default class Navbar extends Component {\n  render(){\n    return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n     <Link className = 'navbar-brand' to='/'>Book Tracker</Link>\n     <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n       <span className=\"navbar-toggler-icon\"></span>\n     </button>\n     <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n       <ul className=\"navbar-nav\">\n         <li className=\"nav-item\">\n         <Link  className = 'nav-link' to='/'>Home</Link>\n         </li>\n         <li className=\"nav-item\">\n           <Link className = 'nav-link' to='/create'>Create Book Log</Link>\n         </li>\n         <li className=\"nav-item\">\n          <Link className = 'nav-link' to='/user'>Create User</Link>\n         </li>\n       </ul>\n     </div>\n    </nav>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Book = props => (\n  <tr>\n    <td>{props.book.username}</td>\n    <td>{props.book.title}</td>\n    <td>{props.book.author}</td>\n    <td>{props.book.pages}</td>\n    <td>{props.book.date.substring(0,10)}</td>\n    <td>\n      <Link to= {'/edit/' + props.book._id}>Edit</Link> | <button onClick={() => {props.deleteBook(props.book._id)}}>Delete</button>\n    </td>\n  </tr>\n)\n\n\nexport default class BookList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {books: []}\n  }\n\n  componentDidMount(){\n    axios.get('http://localhost:5000/books/')\n      .then(response => {\n          this.setState({\n           books: response.data})\n         }).catch(error => {\n           console.log(error);\n      })\n    }\n\n    deleteBook = (id) => {\n      axios.delete('http://localhost:5000/books/'+id)\n      .then(res => console.log(res.data));\n\n      this.setState({\n        books: this.state.books.filter(el => el._id !== id)\n      })\n    }\n\n    bookList = () => {\n      return this.state.books.map(currentbook => {\n        return <Book book = {currentbook}  deleteBook ={this.deleteBook} key = {currentbook._id}/>\n      })\n    }\n\n\n\n  render(){\n    return(\n      <div>\n      <h3>Welcome to the BookList</h3>\n      <table className = 'table'>\n        <thead className = 'thead-light'>\n        <tr>\n          <th>Username</th>\n          <th>Title</th>\n          <th>Author</th>\n          <th>Pages</th>\n          <th>Date</th>\n        </tr>\n</thead>\n    <tbody>\n      {this.bookList()}\n    </tbody>\n\n\n\n\n      </table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\n\nexport default class editBook extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      username: '',\n      title: '',\n      pages: 0,\n      date: new Date(),\n      users: []\n    }\n\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/books/'+this.props.match.params.id)\n    .then(response => {\n    this.setState({\n      username: response.data.username,\n      title: response.data.title,\n      author: response.data.author,\n      pages: response.data.pages,\n      date: new Date(response.data.date)\n    })\n  })\n  .catch(err => console.log(err))\n\n  axios.get('http://localhost:5000/users/')\n      .then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            users: response.data.map(user => user.username),\n          })\n        }\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n\n  }\n\n\n\n\n\n\n  onChangeUsername =(e)=>  {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeTitle = (e) => {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onChangeAuthor = (e) => {\n    this.setState({ author: e.target.value});\n  }\n\n  onChangePages = (e)  =>{\n    this.setState({\n      pages: e.target.value\n    });\n  }\n  onChangeDate = (date) => {\n    this.setState({\n      date: date\n    });\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const book = {\n      username: this.state.username,\n      author: this.state.author,\n      title: this.state.title,\n      pages: this.state.pages,\n      date: this.state.date\n    }\n\n\n\n    axios.post('http://localhost:5000/books/update/' + this.props.match.params.id, book).then(res => console.log(res.data));\n    window.location = '/';\n  }\n\n  render(){\n    return(\n      <div>\n      <h3>Edit Book Log</h3>\n      <form onSubmit ={this.onSubmit}>\n        <div className = 'form-group'>\n          <label>Username: </label>\n          <select ref='userInput'\n            required\n            className ='form-control'\n            value = {this.state.username}\n            onChange = {this.onChangeUsername}>\n              {\n                this.state.users.map(user => <option key ={user}\n                value= {user}>\n              {user}\n            </option>\n              )}\n\n          </select>\n        </div>\n      <div className = 'form-group'>\n        <label>Title: </label>\n        <input type =\"text\"\n          required\n          className = 'form-control'\n          value = {this.state.title}\n          onChange = {this.onChangeTitle}\n          />\n      </div>\n\n      <div className = 'form-group'>\n        <label>Author: </label>\n        <input type =\"text\"\n          required\n          className = 'form-control'\n          value = {this.state.author}\n          onChange = {this.onChangeAuthor}\n          />\n      </div>\n\n      <div className = 'form-group'>\n        <label>Pages: </label>\n        <input\n            type= 'text'\n            required\n            className = 'form-control'\n            value = {this.state.pages}\n            onChange = {this.onChangePages}\n          />\n      </div>\n\n      <div className = 'form-group'>\n        <label>Date: </label>\n        <div>\n          <DatePicker\n            selected={this.state.date}\n            onChange = {this.onChangeDate}\n            />\n        </div>\n\n      </div>\n\n      <div className = 'form-group'>\n        <input\n            type ='submit'\n            value = 'Create Book Log'\n            className = 'btn btn-primary'\n          />\n      </div>\n    </form>\n    </div>\n\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class createUser extends Component {\nconstructor (props) {\n  super(props);\n  this.state = {\n    username: ''\n  }\n  }\n\n  onChangeUsername = (e) => {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const user = {\n      username: this.state.username\n    }\n\n    axios.post('http://localhost:5000/users/add', user).then(res => console.log(res.data));\n\n\n     this.setState({\n       username: ''\n     })\n  }\n\n\n  render(){\n    return(\n      <div>\n        <h3>Create New User</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className = 'form-group'>\n            <label>Username: </label>\n            <input type='text'\n              required\n              className = 'form-control'\n              value = {this.state.username}\n              onChange={this.onChangeUsername}/>\n          </div>\n\n          <div className = 'form-group'>\n            <input\n              type='submit'\n              value='Create User'\n              className = 'btn btn-primary'/>\n\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\n\nexport default class createBook extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      username: '',\n      title: '',\n      author: '',\n      pages: 0,\n      date: new Date(),\n      users: []\n    }\n\n  }\n\n  componentDidMount() {\n  axios.get('http://localhost:5000/users/')\n    .then(response => {\n    if(response.data.length > 0){\n      this.setState({\n        users: response.data.map(user => user.username),\n        username: response.data[0].username\n      })\n    }\n  })\n  }\n\n  onChangeUsername =(e)=>  {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeTitle = (e) => {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onChangeAuthor = (e) => {\n    this.setState({ author: e.target.value});\n  }\n\n  onChangePages = (e)  =>{\n    this.setState({\n      pages: e.target.value\n    });\n  }\n  onChangeDate = (date) => {\n    this.setState({\n      date: date\n    });\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const book = {\n      username: this.state.username,\n      title: this.state.title,\n      author: this.state.author,\n      pages: this.state.pages,\n      date: this.state.date\n    }\n\n    axios.post('http://localhost:5000/books/add', book).then(res => console.log(res.data));\nwindow.location = '/';\n  }\n\n  render(){\n    return(\n      <div>\n      <h3>Create Book Log</h3>\n      <form onSubmit ={this.onSubmit}>\n        <div className = 'form-group'>\n          <label>Username: </label>\n          <select ref='userInput'\n            required\n            className ='form-control'\n            value = {this.state.username}\n            onChange = {this.onChangeUsername}>\n              {\n                this.state.users.map(user => <option key ={user}\n                value= {user}>\n              {user}\n            </option>\n              )}\n\n          </select>\n        </div>\n      <div className = 'form-group'>\n        <label>Title: </label>\n        <input type =\"text\"\n          required\n          className = 'form-control'\n          value = {this.state.title}\n          onChange = {this.onChangeTitle}\n          />\n      </div>\n\n      <div className = 'form-group'>\n        <label>Author: </label>\n        <input type =\"text\"\n          required\n          className = 'form-control'\n          value = {this.state.author}\n          onChange = {this.onChangeAuthor}\n          />\n      </div>\n\n      <div className = 'form-group'>\n        <label>Pages: </label>\n        <input\n            type= 'text'\n            required\n            className = 'form-control'\n            value = {this.state.pages}\n            onChange = {this.onChangePages}\n          />\n      </div>\n\n      <div className = 'form-group'>\n        <label>Date: </label>\n        <div>\n          <DatePicker\n            selected={this.state.date}\n            onChange = {this.onChangeDate}\n            />\n        </div>\n\n      </div>\n\n      <div className = 'form-group'>\n        <input\n            type ='submit'\n            value = 'Create Book Log'\n            className = 'btn btn-primary'\n          />\n      </div>\n    </form>\n    </div>\n\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport{ BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport Navbar from './components/navbar.component';\nimport BookList from './components/book-list.component';\nimport editBook from './components/edit-book.component';\nimport createUser from './components/create-user.component';\nimport createBook from './components/create-book.component';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className = 'container'>\n    <Navbar/>\n    <br/>\n      <Route path ='/' exact component ={BookList}/>\n      <Route path ='/edit/:id' component ={editBook}/>\n      <Route path ='/create' component={createBook}/>\n      <Route path ='/user' component={createUser}/>\n    </div>\n\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}